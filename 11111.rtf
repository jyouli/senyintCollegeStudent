{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fmodern\fcharset0 CourierNewPS-BoldMT;
\f3\fmodern\fcharset0 CourierNewPSMT;\f4\fswiss\fcharset0 ArialMT;\f5\fnil\fcharset0 Menlo-Regular;
\f6\fnil\fcharset0 SimSun;}
{\colortbl;\red255\green255\blue255;\red71\green71\blue71;\red38\green38\blue38;\red0\green116\blue0;
\red63\green110\blue116;\red38\green71\blue75;\red170\green13\blue145;\red46\green13\blue110;\red100\green56\blue32;
\red92\green38\blue153;\red196\green26\blue22;\red28\green0\blue207;\red77\green0\blue158;\red38\green48\blue38;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 http://www.justalkcloud.com\
\pard\pardeftab720\partightenfactor0

\f1\b\fs36 \cf2 \expnd0\expndtw0\kerning0
\'b9\'d8\'d3\'da\'ba\'af\'ca\'fd
\f2 \'a0 isatty( )\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs24 \cf2 int isatty(int filedes);
\f4 \

\f1 \'b7\'b5\'bb\'d8\'d6\'b5\'a3\'ba
\fs28 \cf3 \'c8\'e7\'b9\'fb\'b2\'ce\'ca\'fd
\f4 desc
\f1 \'cb\'f9\'b4\'fa\'b1\'ed\'b5\'c4\'ce\'c4\'bc\'fe\'c3\'e8\'ca\'f6\'b4\'ca\'ce\'aa\'d2\'bb\'d6\'d5\'b6\'cb\'bb\'fa\'d4\'f2\'b7\'b5\'bb\'d8
\f4 1
\f1 \'a3\'ac\'b7\'f1\'d4\'f2\'b7\'b5\'bb\'d8
\f4 0
\f1 \'a1\'a3
\f2\b\fs36 \cf2 \
\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f5\b0\fs22 \cf4 \kerning1\expnd0\expndtw0 \CocoaLigature0 //
\f1 \'c9\'e8\'d6\'c3\'bd\'e2\'be\'f6
\f5 SDWebImage
\f1 \'bb\'ba\'b4\'e6\'b9\'fd\'b4\'f3\'ca\'b1\'d2\'fd\'c6\'f0\'b5\'c4
\f5 bug\cf0 \
    [\cf5 SDImageCache\cf0  \cf6 sharedImageCache\cf0 ].\cf5 shouldDecompressImages\cf0  = \cf7 NO\cf0 ;\
    [\cf5 SDWebImageDownloader\cf0  \cf6 sharedDownloader\cf0 ].\cf5 shouldDecompressImages\cf0  = \cf7 NO\cf0 ;\
    \
\pard\pardeftab720\partightenfactor0

\f2\b\fs36 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f5\b0\fs22 \cf4 \kerning1\expnd0\expndtw0 \CocoaLigature0 // 
\f1 \'bd\'ab
\f5 NSlog
\f1 \'b4\'f2\'d3\'a1\'d0\'c5\'cf\'a2\'b1\'a3\'b4\'e6\'b5\'bd
\f5 Document
\f1 \'c4\'bf\'c2\'bc\'cf\'c2\'b5\'c4\'ce\'c4\'bc\'fe\'d6\'d0
\f5 \cf0 \
- (\cf7 void\cf0 )redirectNSlogToDocumentFolder\
\{\
    \
    \cf4 //
\f1 \'c8\'e7\'b9\'fb\'d2\'d1\'be\'ad\'c1\'ac\'bd\'d3
\f5 Xcode
\f1 \'b5\'f7\'ca\'d4\'d4\'f2\'b2\'bb\'ca\'e4\'b3\'f6\'b5\'bd\'ce\'c4\'bc\'fe
\f5 \cf0 \
    \cf7 if\cf0 (\cf8 isatty\cf0 (\cf9 STDOUT_FILENO\cf0 )) \{\
        \cf7 return\cf0 ;\
    \}\
    \
    \cf10 UIDevice\cf0  *device = [\cf10 UIDevice\cf0  \cf8 currentDevice\cf0 ];\
    \cf7 if\cf0 ([[device \cf8 model\cf0 ] \cf8 hasSuffix\cf0 :\cf11 @"Simulator"\cf0 ])\{ \cf4 //
\f1 \'d4\'da\'c4\'a3\'c4\'e2\'c6\'f7\'b2\'bb\'b1\'a3\'b4\'e6\'b5\'bd\'ce\'c4\'bc\'fe\'d6\'d0
\f5 \cf0 \
        \cf7 return\cf0 ;\
    \}\
    \
    \cf4 //
\f1 \'bd\'ab
\f5 NSlog
\f1 \'b4\'f2\'d3\'a1\'d0\'c5\'cf\'a2\'b1\'a3\'b4\'e6\'b5\'bd
\f5 Document
\f1 \'c4\'bf\'c2\'bc\'cf\'c2\'b5\'c4
\f5 Log
\f1 \'ce\'c4\'bc\'fe\'bc\'d0\'cf\'c2
\f5 \cf0 \
    \cf10 NSArray\cf0  *paths = \cf8 NSSearchPathForDirectoriesInDomains\cf0 (\cf8 NSDocumentDirectory\cf0 , \cf8 NSUserDomainMask\cf0 , \cf7 YES\cf0 );\
    \cf10 NSString\cf0  *logDirectory = [[paths \cf8 objectAtIndex\cf0 :\cf12 0\cf0 ] \cf8 stringByAppendingPathComponent\cf0 :\cf11 @"Log"\cf0 ];\
    \
    \cf10 NSFileManager\cf0  *fileManager = [\cf10 NSFileManager\cf0  \cf8 defaultManager\cf0 ];\
    \cf7 BOOL\cf0  fileExists = [fileManager \cf8 fileExistsAtPath\cf0 :logDirectory];\
    \cf7 if\cf0  (!fileExists) \{\
        [fileManager \cf8 createDirectoryAtPath\cf0 :logDirectory  \cf8 withIntermediateDirectories\cf0 :\cf7 YES\cf0  \cf8 attributes\cf0 :\cf7 nil\cf0  \cf8 error\cf0 :\cf7 nil\cf0 ];\
    \}\
    \
    \cf10 NSDateFormatter\cf0  *formatter = [[\cf10 NSDateFormatter\cf0  \cf8 alloc\cf0 ] \cf8 init\cf0 ];\
    [formatter \cf8 setLocale\cf0 :[[\cf10 NSLocale\cf0  \cf8 alloc\cf0 ] \cf8 initWithLocaleIdentifier\cf0 :\cf11 @"zh_CN"\cf0 ]];\
    [formatter \cf8 setDateFormat\cf0 :\cf11 @"yyyy-MM-dd HH:mm:ss"\cf0 ]; \cf4 //
\f1 \'c3\'bf\'b4\'ce\'c6\'f4\'b6\'af\'ba\'f3\'b6\'bc\'b1\'a3\'b4\'e6\'d2\'bb\'b8\'f6\'d0\'c2\'b5\'c4\'c8\'d5\'d6\'be\'ce\'c4\'bc\'fe\'d6\'d0
\f5 \cf0 \
    \cf10 NSString\cf0  *dateStr = [formatter \cf8 stringFromDate\cf0 :[\cf10 NSDate\cf0  \cf8 date\cf0 ]];\
    \cf10 NSString\cf0  *logFilePath = [logDirectory \cf8 stringByAppendingFormat\cf0 :\cf11 @"/%@.log"\cf0 ,dateStr];\
    \
    \cf4 // 
\f1 \'bd\'ab
\f5 log
\f1 \'ca\'e4\'c8\'eb\'b5\'bd\'ce\'c4\'bc\'fe
\f5 \cf0 \
    \cf8 freopen\cf0 ([logFilePath \cf8 cStringUsingEncoding\cf0 :\cf8 NSASCIIStringEncoding\cf0 ], \cf11 "a+"\cf0 , \cf9 stdout\cf0 );\
    \cf8 freopen\cf0 ([logFilePath \cf8 cStringUsingEncoding\cf0 :\cf8 NSASCIIStringEncoding\cf0 ], \cf11 "a+"\cf0 , \cf9 stderr\cf0 );\
    \
    \cf4 //
\f1 \'ce\'b4\'b2\'b6\'bb\'f1\'b5\'c4
\f5 Objective-C
\f1 \'d2\'ec\'b3\'a3\'c8\'d5\'d6\'be
\f5 \cf0 \
    \cf8 NSSetUncaughtExceptionHandler\cf0 (&\cf6 UncaughtExceptionHandlerCY\cf0 );\
    \
\}\
\
\cf7 void\cf0  UncaughtExceptionHandlerCY(\cf10 NSException\cf0 * exception)\
\{\
    \cf10 NSString\cf0 * name = [ exception \cf8 name\cf0  ];\
    \cf10 NSString\cf0 * reason = [ exception \cf8 reason\cf0  ];\
    \cf10 NSArray\cf0 * symbols = [ exception \cf8 callStackSymbols\cf0  ]; \cf4 // 
\f1 \'d2\'ec\'b3\'a3\'b7\'a2\'c9\'fa\'ca\'b1\'b5\'c4\'b5\'f7\'d3\'c3\'d5\'bb
\f5 \cf0 \
    \cf10 NSMutableString\cf0 * strSymbols = [ [ \cf10 NSMutableString\cf0  \cf8 alloc\cf0  ] \cf8 init\cf0  ]; \cf4 //
\f1 \'bd\'ab\'b5\'f7\'d3\'c3\'d5\'bb\'c6\'b4\'b3\'c9\'ca\'e4\'b3\'f6\'c8\'d5\'d6\'be\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f5 \cf0 \
    \cf7 for\cf0  ( \cf10 NSString\cf0 * item \cf7 in\cf0  symbols )\
    \{\
        [ strSymbols \cf8 appendString\cf0 : item ];\
        [ strSymbols \cf8 appendString\cf0 : \cf11 @"\\r\\n"\cf0  ];\
    \}\
    \
    \cf4 //
\f1 \'bd\'ab
\f5 crash
\f1 \'c8\'d5\'d6\'be\'b1\'a3\'b4\'e6\'b5\'bd
\f5 Document
\f1 \'c4\'bf\'c2\'bc\'cf\'c2\'b5\'c4
\f5 Log
\f1 \'ce\'c4\'bc\'fe\'bc\'d0\'cf\'c2
\f5 \cf0 \
    \cf10 NSArray\cf0  *paths = \cf8 NSSearchPathForDirectoriesInDomains\cf0 (\cf8 NSDocumentDirectory\cf0 , \cf8 NSUserDomainMask\cf0 , \cf7 YES\cf0 );\
    \cf10 NSString\cf0  *logDirectory = [[paths \cf8 objectAtIndex\cf0 :\cf12 0\cf0 ] \cf8 stringByAppendingPathComponent\cf0 :\cf11 @"Log"\cf0 ];\
    \
    \cf10 NSFileManager\cf0  *fileManager = [\cf10 NSFileManager\cf0  \cf8 defaultManager\cf0 ];\
    \cf7 if\cf0  (![fileManager \cf8 fileExistsAtPath\cf0 :logDirectory]) \{\
        [fileManager \cf8 createDirectoryAtPath\cf0 :logDirectory  \cf8 withIntermediateDirectories\cf0 :\cf7 YES\cf0  \cf8 attributes\cf0 :\cf7 nil\cf0  \cf8 error\cf0 :\cf7 nil\cf0 ];\
    \}\
    \
    \cf10 NSString\cf0  *logFilePath = [logDirectory \cf8 stringByAppendingPathComponent\cf0 :\cf11 @"UncaughtException.log"\cf0 ];\
    \cf10 NSDateFormatter\cf0  *formatter = [[\cf10 NSDateFormatter\cf0  \cf8 alloc\cf0 ] \cf8 init\cf0 ];\
    [formatter \cf8 setLocale\cf0 :[[\cf10 NSLocale\cf0  \cf8 alloc\cf0 ] \cf8 initWithLocaleIdentifier\cf0 :\cf11 @"zh_CN"\cf0 ]];\
    [formatter \cf8 setDateFormat\cf0 :\cf11 @"yyyy-MM-dd HH:mm:ss"\cf0 ];\
    \cf10 NSString\cf0  *dateStr = [formatter \cf8 stringFromDate\cf0 :[\cf10 NSDate\cf0  \cf8 date\cf0 ]];\
    \
    \cf10 NSString\cf0  *crashString = [\cf10 NSString\cf0  \cf8 stringWithFormat\cf0 :\cf11 @"<- %@ ->[ Uncaught Exception ]\\r\\nName: %@, Reason: %@\\r\\n[ Fe Symbols Start ]\\r\\n%@[ Fe Symbols End ]\\r\\n\\r\\n"\cf0 , dateStr, name, reason, strSymbols];\
    \cf4 //
\f1 \'b0\'d1\'b4\'ed\'ce\'f3\'c8\'d5\'d6\'be\'d0\'b4\'b5\'bd\'ce\'c4\'bc\'fe\'d6\'d0
\f5 \cf0 \
    \cf7 if\cf0  (![fileManager \cf8 fileExistsAtPath\cf0 :logFilePath]) \{\
        [crashString \cf8 writeToFile\cf0 :logFilePath \cf8 atomically\cf0 :\cf7 YES\cf0  \cf8 encoding\cf0 :\cf8 NSUTF8StringEncoding\cf0  \cf8 error\cf0 :\cf7 nil\cf0 ];\
    \}\cf7 else\cf0 \{\
        \cf10 NSFileHandle\cf0  *outFile = [\cf10 NSFileHandle\cf0  \cf8 fileHandleForWritingAtPath\cf0 :logFilePath];\
        [outFile \cf8 seekToEndOfFile\cf0 ];\
        [outFile \cf8 writeData\cf0 :[crashString \cf8 dataUsingEncoding\cf0 :\cf8 NSUTF8StringEncoding\cf0 ]];\
        [outFile \cf8 closeFile\cf0 ];\
    \}\
\}\
\
\
+(\cf7 void\cf0 )clearWebCatch\
\{\
    \cf4 //
\f1 \'c7\'e5\'b3\'fd
\f5 cookies\cf0 \
    \cf10 NSHTTPCookie\cf0  *cookie;\
    \cf10 NSHTTPCookieStorage\cf0  *storage = [\cf10 NSHTTPCookieStorage\cf0  \cf8 sharedHTTPCookieStorage\cf0 ];\
    \cf7 for\cf0  (cookie \cf7 in\cf0  [storage \cf8 cookies\cf0 ])\
    \{\
        [storage \cf8 deleteCookie\cf0 :cookie];\
    \}\
    \
    \cf4 //
\f1 \'c7\'e5\'b3\'fd
\f5 UIWebView
\f1 \'b5\'c4\'bb\'ba\'b4\'e6
\f5 \cf0 \
    [[\cf10 NSURLCache\cf0  \cf8 sharedURLCache\cf0 ] \cf8 removeAllCachedResponses\cf0 ];\
\}\
\
\
\
\
\pard\tx866\pardeftab866\pardirnatural\partightenfactor0

\fs36 \cf0 [number \cf8 stringByTrimmingCharactersInSet\cf0 :[\cf13 NSCharacterSet\cf0  \cf8 whitespaceCharacterSet\cf0 ]]
\fs22 \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf0 \
\
\
\pard\pardeftab720\partightenfactor0

\f6\fs28 \cf14 \expnd0\expndtw0\kerning0
\CocoaLigature1 -addEntriesFromDictionary\uc0\u65306  \u28155 \u21152 \u21478 \u19968 \u20010 \u23383 \u20856 \u20013 \u24471 \u25152 \u26377 \u26465 \u30446 \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f5\fs22 \cf10 \kerning1\expnd0\expndtw0 \CocoaLigature0 CFUUIDRef}